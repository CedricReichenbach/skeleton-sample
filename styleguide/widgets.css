/*
 * Variables that are used on the project.
 * Never use a color that is not in here
 *
 * Namespace:
 *  f: font
 *  c: color
 *  s: size
 *  i: icons & sprites
 *  a: animations & transitions
 */
/**
 * Bone CSS Defaults
 */
@import url(http://fonts.googleapis.com/css?family=Lora:400,700);
/**
 * Prfixes a rulename with your prefered prefix.
 * Can also be used to create placeholder and normal classes
 *
 * prefix-rules( $ruleName,$prefixes )
 * @type {[string/list]} $ruleName class or/and placeholder name
 * @type {[list]} $refixes selector slug
 *
 * usage:
 *  @include prefix-rule( "foo", ".l-" ".is-" "%" ) {
 *      margin: 20px;
 *  }
 * generates:
 *  .l-foo, .is-foo, %foo {
 *      margin: 20px;
 *  }
 *
 */
/**
 * px2percent calculates the relative with based on two values
 * @param  {[value]} $size
 * @param  {[value]} $contextSize
 * @return {[value in %]}
 */
/**
 * px2rel turns px values in to REM's base on the base font size
 * @param  {[value]} $px Wished font size
 * @param  {[value]} $baseSize Reference Size (usualy HTML/Body font size)
 * @param  {[value]} $unit of the converted value
 * @return {[value]} Relative value inc. unit
 */
/**
 *  font-size REM fallback mixin for legacy browsers
 *  @param  {[value]} $px wished font-size / only use when needed will bloat up your CSS
 */
/**
 *  line-height REM fallback mixin for legacy browsers
 *  @param  {[value]} $px wished line-height
 */
/**
 * triangle mixin produces a crossbrowser CSS triangle
 * @height {[value]} height of the arrow
 * @color {[color]} arrow color
 * @direction {[string]} can be up down left or right
 * @width: {[value]} by default the arrow has the same height and width
 */
/**
 * circle mixin produces a circle of a given color and size
 * @size {[value]} diameter of the circle
 * @color {[color]} fill color
 */
/**
 * Absolutely centers an element in it's parent horizontal, vertically or in both directions
 * @direction {[string]} vertical, horizontal or both
 */
/**
 * Circle trigonometric mixin
 * x = a + r cos (t)
 * y = b + r cos (t)
 *
 * where (a,b) is the center of the circle
 * (in our case a = 0 and b = 0 for simplicity. )
 *
 * @degres {[degrees]} in deg
 * @degres {[radius]} in whatever unit
**/
/*
 * will generate an icon helper class for different sized icons
 * usage:
 *      @include icons("icons", 32, 10 14 16 25, "px")
 * can be tested here:
 *      http://sassmeister.com/gist/bda172ef16a168d99b3d
 */
/*
  usage:

  @include breakpoint(mobile) {
    margin: 20px;
  }
*/
.js-breakpoint:after,
.js-breakpoint {
  content: '{"mobile-portrait":"only screen and (max-width:400px)","mobile":"only screen and (max-width:740px)","not-mobile":"only screen and (min-width:741px)","only-mobile":"only screen and (max-width:740px)","tablet-portrait":"only screen and (max-width:850px)","tablet":"only screen and (max-width:1050px)","only-tablet":"only screen and (min-width:741px) and (max-width:1051px)","not-tablet":"only screen and (min-width:1051px)","desktop":"only screen and (min-width:1051px)","only-desktop":"only screen and (min-width:1051px)","retina":"only screen and (-webkit-min-device-pixel-ratio : 1.5), only screen and (min-device-pixel-ratio : 1.5)","highres":"print, (-o-min-device-pixel-ratio: 5/4), (-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 120dpi)","print":"print"}';
  font-family: '{"mobile-portrait":"only screen and (max-width:400px)","mobile":"only screen and (max-width:740px)","not-mobile":"only screen and (min-width:741px)","only-mobile":"only screen and (max-width:740px)","tablet-portrait":"only screen and (max-width:850px)","tablet":"only screen and (max-width:1050px)","only-tablet":"only screen and (min-width:741px) and (max-width:1051px)","not-tablet":"only screen and (min-width:1051px)","desktop":"only screen and (min-width:1051px)","only-desktop":"only screen and (min-width:1051px)","retina":"only screen and (-webkit-min-device-pixel-ratio : 1.5), only screen and (min-device-pixel-ratio : 1.5)","highres":"print, (-o-min-device-pixel-ratio: 5/4), (-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 120dpi)","print":"print"}';
}

.title {
  font-family: Avenir;
  font-size: 3rem;
  line-height: 1.4;
  color: #2c3e50;
}

.subtitle {
  font-family: Avenir;
  font-size: 2.4rem;
  line-height: 1.4;
  color: #34495e;
}

.nav-item {
  font-family: Avenir;
  font-size: 1.125rem;
  line-height: 1.4;
  color: #9b59b6;
}

.label {
  font-family: Avenir;
  font-size: .8rem;
  font-weight: bold;
  line-height: 1.4;
  color: #2980b9;
  text-transform: uppercase;
}

.body {
  font-family: Avenir;
  font-size: 1rem;
  line-height: 1.4;
  color: #3498db;
}

html {
  min-height: 100%;
  font: 1em/1.5 "Lora", serif;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  overflow-y: scroll;
}

html, body, .l-body {
  min-height: 100%;
}

strong {
  font-weight: 700;
}

/*
 * Remove text-shadow in selection highlight: h5bp.com/i
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */
::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
 * Remove the gap between images, videos, audio and canvas and the bottom of
 * their containers: h5bp.com/i/440
 */
audio,
canvas,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */
fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */
textarea {
  resize: vertical;
}

/**
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.l-horizontal-extremities:before, .l-horizontal-extremities:after, .l-clearfix:before, .l-clearfix:after {
  content: " ";
  display: table;
}
.l-horizontal-extremities:after, .l-clearfix:after {
  clear: both;
}

/**
 * Class used to wrap the contents of sections that should have the with of the design
 */
.l-site-width {
  position: relative;
  margin: 0 auto;
  max-width: 980px;
}

/**
 * creates a inline list
 * [|---|----|--|-----|      ]
 */
.l-horizontal-list {
  list-style: none;
  margin: 0;
  padding: 0;
}
.l-horizontal-list > li {
  display: inline-block;
  vertical-align: top;
}

/**
 * set any direct children of the selected element inline
 * [|---|----|--|-----|      ]
 */
.l-horizontal {
  font-size: 0.1px;
}
.l-horizontal > * {
  font-size: 16px;
  font-size: 1rem;
}
.l-horizontal > * {
  display: inline-block;
  vertical-align: top;
}

/**
 * inline list where all direct children have the same width
 * [|-----|-----|-----|-----|]
 */
.l-horizontal-samewidth-list {
  display: table;
  list-style: none;
  margin: 0;
  padding: 0;
  width: 100%;
  table-layout: fixed;
}
.l-horizontal-samewidth-list > li {
  height: 100%;
  display: table-cell;
}

/**
 * used for elements placed next to each other that should be equidistant
 * [|---|   |---|   |---|   |---|]
 */
.l-horizontal-equidistant {
  text-align: justify;
  font-size: 0.1px;
  /* IE 9 & 10 don't like font-size: 0; */
}
.l-horizontal-equidistant > * {
  display: inline-block;
  font-size: 16px;
}
.l-horizontal-equidistant:after {
  content: '';
  width: 100%;
  /* Ensures there are at least 2 lines of text, so justification works */
  display: inline-block;
}

/**
 * used to make table-layouts
 * no documentation for now, read the code :D
 */
.l-table {
  display: table;
  width: 100%;
  box-sizing: border-box;
  /*
  &--gapped {
      margin-bottom: -$s-gutter;
      @include prefix-rule( "table-cell", $prefixes: $layout-selectors) {
          padding-bottom: $s-gutter;
      }
      .l-table-cell + .l-table-cell {
          padding-left: $s-gutter;
      }
  }
  */
}

.l-table-row {
  display: table-row;
}

.l-table-cell {
  display: table-cell;
  vertical-align: middle;
}
.l-table-cell--max {
  width: 100%;
}
.l-table-cell--min {
  width: 1%;
}

/**
 * places children at the exremities of the parent
 * [|----|                |---|]
 */
.l-horizontal-extremities > * {
  float: right;
}
.l-horizontal-extremities > *:first-child {
  float: left;
}

/**
 * a few gutter helperclasses for margins on top and bottom of elements
 */
.gap {
  margin-bottom: 20px;
}
.gap--double {
  margin-bottom: 40px;
}
.gap--triple {
  margin-bottom: 60px;
}

.gap-above {
  margin-top: 20px;
}
.gap-above--double {
  margin-top: 40px;
}
.gap-above--triple {
  margin-top: 60px;
}

.no-gap {
  margin: 0;
}

/**
 *  islands describe the padding of a box
 */
.l-continent {
  padding: 30px;
}

.l-island {
  padding: 20px;
}

.l-islet {
  padding: 10px;
}

/**
 *   entirely fills out a element
 */
.l-fill {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

/* centers with complicated table layout */
.l-centered-container {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: auto;
}

.l-centered-inner {
  display: table;
  vertical-align: middle;
  text-align: center;
  height: 100%;
  width: 100%;
}

.l-centered-content {
  display: table-cell;
  vertical-align: middle;
}

.l-centered-body {
  position: relative;
  display: inline-block;
  max-width: 90%;
  text-align: left;
}

/**
 * Consider adding sensible grid for grid and responsiveness
 * @include sensibleGrid();
 */
/*!
 * 0. false will set the grid elements to inline-block if true flexbox
 * 1. size of the gutter between the cols
 * 2. the gutter between the columns can be padding or margin
 * 3. the gutter can be on the right or the left side of every col
 * 4. Provides additional classes for the grid in order have different available gutter sizes
 * 5. Base font size used for the in-line-block gap fix: http://css-tricks.com/fighting-the-space-between-inline-block-elements/
 * 6. Slug used for the grid classes (l- for SMACSS layout), empty string for no slug
 * 7. If set to true, one push class per with will be available (margin-left)
 * 8. Generated col names & withs
 * 9. Breakpoints used in the grid (ideally reduced to a minimum)
 * 10. To avoid breaking the grid on Blackberry and some Firefox version you can set a rounding. 50% will be 50% - $rounding etc.. Set this to 0 if you don't need it.
 */
.l-grid {
  font-size: 0.1px;
  margin-right: -20px;
  margin-right: calc(-20px + -1px );
}
.l-grid .l-grid-cell {
  padding-right: 20px;
  font-size: 16px;
}
.l-grid--no-gap {
  margin-right: 0px;
  margin-right: calc(-0px + -1px );
}
.l-grid--no-gap .l-grid-cell {
  padding-right: 0px;
}
.l-grid--double {
  margin-right: -40px;
  margin-right: calc(-40px + -1px );
}
.l-grid--double .l-grid-cell {
  padding-right: 40px;
}
.l-grid--triple {
  margin-right: -60px;
  margin-right: calc(-60px + -1px );
}
.l-grid--triple .l-grid-cell {
  padding-right: 60px;
}
.l-grid--gapped > .l-grid-cell {
  padding-bottom: 20px;
}

.l-grid-cell {
  display: inline-block;
  vertical-align: top;
  box-sizing: border-box;
}

.l-one-whole {
  width: 99.905%;
}

.l-one-half {
  width: 49.9525%;
}

.l-one-quarter {
  width: 24.97625%;
}

.l-three-quarters {
  width: 74.92875%;
}

.l-one-third {
  width: 33.30133%;
}

.l-two-thirds {
  width: 66.60267%;
}

.l-one-fifth {
  width: 19.981%;
}

.l-four-fifths {
  width: 79.924%;
}

.l-one-sixth {
  width: 16.65017%;
}

.l-five-sixths {
  width: 83.25383%;
}

@media only screen and (min-width: 1051px) {
  .l-not-tablet-one-whole {
    width: 99.905%;
  }

  .l-not-tablet-one-half {
    width: 49.9525%;
  }

  .l-not-tablet-one-quarter {
    width: 24.97625%;
  }

  .l-not-tablet-three-quarters {
    width: 74.92875%;
  }

  .l-not-tablet-one-third {
    width: 33.30133%;
  }

  .l-not-tablet-two-thirds {
    width: 66.60267%;
  }

  .l-not-tablet-one-fifth {
    width: 19.981%;
  }

  .l-not-tablet-four-fifths {
    width: 79.924%;
  }

  .l-not-tablet-one-sixth {
    width: 16.65017%;
  }

  .l-not-tablet-five-sixths {
    width: 83.25383%;
  }
}
@media only screen and (max-width: 1050px) {
  .l-tablet-one-whole {
    width: 99.905%;
  }

  .l-tablet-one-half {
    width: 49.9525%;
  }

  .l-tablet-one-quarter {
    width: 24.97625%;
  }

  .l-tablet-three-quarters {
    width: 74.92875%;
  }

  .l-tablet-one-third {
    width: 33.30133%;
  }

  .l-tablet-two-thirds {
    width: 66.60267%;
  }

  .l-tablet-one-fifth {
    width: 19.981%;
  }

  .l-tablet-four-fifths {
    width: 79.924%;
  }

  .l-tablet-one-sixth {
    width: 16.65017%;
  }

  .l-tablet-five-sixths {
    width: 83.25383%;
  }
}
@media only screen and (max-width: 850px) {
  .l-tablet-portrait-one-whole {
    width: 99.905%;
  }

  .l-tablet-portrait-one-half {
    width: 49.9525%;
  }

  .l-tablet-portrait-one-quarter {
    width: 24.97625%;
  }

  .l-tablet-portrait-three-quarters {
    width: 74.92875%;
  }

  .l-tablet-portrait-one-third {
    width: 33.30133%;
  }

  .l-tablet-portrait-two-thirds {
    width: 66.60267%;
  }

  .l-tablet-portrait-one-fifth {
    width: 19.981%;
  }

  .l-tablet-portrait-four-fifths {
    width: 79.924%;
  }

  .l-tablet-portrait-one-sixth {
    width: 16.65017%;
  }

  .l-tablet-portrait-five-sixths {
    width: 83.25383%;
  }
}
@media only screen and (min-width: 741px) {
  .l-not-mobile-one-whole {
    width: 99.905%;
  }

  .l-not-mobile-one-half {
    width: 49.9525%;
  }

  .l-not-mobile-one-quarter {
    width: 24.97625%;
  }

  .l-not-mobile-three-quarters {
    width: 74.92875%;
  }

  .l-not-mobile-one-third {
    width: 33.30133%;
  }

  .l-not-mobile-two-thirds {
    width: 66.60267%;
  }

  .l-not-mobile-one-fifth {
    width: 19.981%;
  }

  .l-not-mobile-four-fifths {
    width: 79.924%;
  }

  .l-not-mobile-one-sixth {
    width: 16.65017%;
  }

  .l-not-mobile-five-sixths {
    width: 83.25383%;
  }
}
@media only screen and (max-width: 740px) {
  .l-mobile-one-whole {
    width: 99.905%;
  }

  .l-mobile-one-half {
    width: 49.9525%;
  }

  .l-mobile-one-quarter {
    width: 24.97625%;
  }

  .l-mobile-three-quarters {
    width: 74.92875%;
  }

  .l-mobile-one-third {
    width: 33.30133%;
  }

  .l-mobile-two-thirds {
    width: 66.60267%;
  }

  .l-mobile-one-fifth {
    width: 19.981%;
  }

  .l-mobile-four-fifths {
    width: 79.924%;
  }

  .l-mobile-one-sixth {
    width: 16.65017%;
  }

  .l-mobile-five-sixths {
    width: 83.25383%;
  }
}
@media only screen and (max-width: 400px) {
  .l-mobile-portrait-one-whole {
    width: 99.905%;
  }

  .l-mobile-portrait-one-half {
    width: 49.9525%;
  }

  .l-mobile-portrait-one-quarter {
    width: 24.97625%;
  }

  .l-mobile-portrait-three-quarters {
    width: 74.92875%;
  }

  .l-mobile-portrait-one-third {
    width: 33.30133%;
  }

  .l-mobile-portrait-two-thirds {
    width: 66.60267%;
  }

  .l-mobile-portrait-one-fifth {
    width: 19.981%;
  }

  .l-mobile-portrait-four-fifths {
    width: 79.924%;
  }

  .l-mobile-portrait-one-sixth {
    width: 16.65017%;
  }

  .l-mobile-portrait-five-sixths {
    width: 83.25383%;
  }
}
@media print {
  .l-print-one-whole {
    width: 99.905%;
  }

  .l-print-one-half {
    width: 49.9525%;
  }

  .l-print-one-quarter {
    width: 24.97625%;
  }

  .l-print-three-quarters {
    width: 74.92875%;
  }

  .l-print-one-third {
    width: 33.30133%;
  }

  .l-print-two-thirds {
    width: 66.60267%;
  }

  .l-print-one-fifth {
    width: 19.981%;
  }

  .l-print-four-fifths {
    width: 79.924%;
  }

  .l-print-one-sixth {
    width: 16.65017%;
  }

  .l-print-five-sixths {
    width: 83.25383%;
  }
}
.t-selectable {
  user-select: text;
}

.t-not-selectable {
  user-select: none;
}

/**
 * http://stackoverflow.com/questions/11459746/css3-webfont-smoothing-and-antialiasing-in-firefox-and-opera
 */
.t-antialiased {
  -webkit-font-smooting: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/*
 *  will trucate text needs a fixed width
 *  http://css-tricks.com/snippets/css/truncate-string-with-ellipsis/
 */
.t-truncate {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.js-scrollbar-measure {
  width: 100px;
  height: 100px;
  overflow: scroll;
  position: absolute;
  top: -9999px;
  left: -9999px;
}

.button {
  text-align: center;
  font-size: 12px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  color: white;
}
.button, .button--color-green {
  background: green;
}
.button--color-red {
  background: red;
}
.button--color-blue {
  background: blue;
}
.button, .button--size-medium {
  padding: 10px 40px;
}
.button--size-small {
  padding: 5px 10px;
}
.button--size-big {
  padding: 20px 80px;
}
.button, .button--corners-rounded {
  border-radius: 5px;
}
.button--corners-circle {
  border-radius: 100%;
  box-sizing: border-box;
}
.button--corners-circle.button--medium {
  padding: 10px;
}
.button--corners-square {
  border-radius: 0;
}

.docs-skeleton {
  padding: 40px 0;
  line-height: 1.45;
}
.docs-skeleton #logo {
  float: left;
  margin: 10px 20px 0 0 !important;
  height: 65px;
}
.docs-skeleton p {
  margin-bottom: 1.3em;
}
.docs-skeleton h1, .docs-skeleton h2, .docs-skeleton h3, .docs-skeleton h4 {
  margin: 1.414em 0 0.5em;
  font-weight: inherit;
  line-height: 1.2;
}
.docs-skeleton h1 {
  margin-top: 0;
  font-size: 3.998em;
}
.docs-skeleton h2 {
  font-size: 2.827em;
}
.docs-skeleton h3 {
  font-size: 1.999em;
}
.docs-skeleton h4 {
  font-size: 1.414em;
}
.docs-skeleton pre {
  background: #f7f7f7;
  border: 1px solid #dddddd;
  padding: 10px;
}

.tweet {
  padding: 10px;
  position: relative;
  width: 100%;
  box-sizing: border-box;
}
.tweet-avatar {
  position: absolute;
  left: 10px;
  top: 10px;
  width: 80px;
}
.tweet-username {
  font-weight: bold;
  color: black;
  margin: 0;
}
.tweet-handle {
  color: #999;
  font-size: .8em;
  margin: 0;
}
.tweet-sent {
  position: absolute;
  top: 10px;
  right: 10px;
  text-align: right;
  color: #999;
  font-size: .8em;
}
.tweet-actions {
  color: #999;
  font-size: .9em;
}
.tweet-action {
  color: #999;
  position: relative;
  padding-left: 18.5px;
  margin-right: 10px;
}
.tweet-action:before {
  content: "";
  position: absolute;
  top: 50%;
  left: 0;
  width: 16px;
  height: 10px;
  transform: translateY(-50%);
}
.tweet-action--reply:before {
  background: url(http://www.londonbroncosrl.com/tools/images/tweet/reply.png) no-repeat;
}
.tweet-action--retweet:before {
  background: url(http://politwitter.ca/images/icon_retweet.png) no-repeat;
}
.tweet-action--favourite:before {
  background: url(http://www.esomar.org/layout/images/icons/16/icon-star-grey.png) no-repeat;
}

.tweet--display-list {
  background: rgba(0, 0, 0, 0.1);
}
.tweet--display-list .tweet-actions, .tweet--display-list .tweet-social-container {
  display: none;
}
.tweet--display-list:hover .tweet-actions {
  display: block;
}
.tweet--display-list .tweet-user, .tweet--display-list .tweet-text {
  padding-left: 90px;
}
.tweet--display-list .tweet-actions {
  text-align: right;
}

.tweet--display-item {
  background: white;
  border: 1px solid #ccc;
  border-radius: 5px;
  padding-bottom: 40px;
}
.tweet--display-item .tweet-avatar {
  width: 60px;
}
.tweet--display-item .tweet-user {
  padding-left: 70px;
}
.tweet--display-item .tweet-username {
  font-size: 1.5rem;
}
.tweet--display-item .tweet-handle {
  font-size: 1.2rem;
}
.tweet--display-item .tweet-text {
  font-size: 1.2rem;
}
.tweet--display-item .tweet-actions {
  margin-bottom: 10px;
}
.tweet--display-item .tweet-social-container {
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc;
  padding: 5px 0;
}
.tweet--display-item .tweet-social-stat {
  border-right: 1px solid #ccc;
  padding: 0 10px;
  display: inline-block;
}
.tweet--display-item .tweet-social-stat:first-of-type {
  padding-left: 0;
}
.tweet--display-item .tweet-social-stat:last-of-type {
  border-right: 0;
}
.tweet--display-item .tweet-social-stat-title,
.tweet--display-item .tweet-social-stat-number {
  display: block;
}
.tweet--display-item .tweet-social-stat-title {
  text-transform: uppercase;
  color: #999;
  font-size: .8rem;
}
.tweet--display-item .tweet-social-stat-number {
  font-size: 1.5rem;
  color: #2980b9;
  margin-right: 10px;
}
.tweet--display-item .tweet-favourite {
  display: inline-block;
  width: 25px;
  margin-left: 5px;
  border-radius: 5px;
  margin-top: -6px;
}
.tweet--display-item .tweet-sent {
  top: auto;
  right: auto;
  bottom: 10px;
  left: 10px;
}

.tweet--display-chat {
  background: rgba(0, 100, 100, 0.1);
}
.tweet--display-chat .tweet-avatar, .tweet--display-chat .tweet-username, .tweet--display-chat .tweet-actions, .tweet--display-chat .tweet-social-container {
  display: none;
}
.tweet--display-chat .tweet-user, .tweet--display-chat .tweet-text {
  display: block;
  margin: 0;
}

/* print CSS fromt H5BP */
@media print {
  * {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster: h5bp.com/s */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]:after {
    content: " (" attr(href) ")";
  }

  abbr[title]:after {
    content: " (" attr(title) ")";
  }

  /*
   * Don't show links that are fragment identifiers,
   * or use the `javascript:` pseudo protocol
   */
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: "";
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  thead {
    display: table-header-group;
    /* h5bp.com/t */
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  img {
    max-width: 100% !important;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}
/*
 * Hide only visually, but have it available for screen readers: h5bp.com/v
 */
.is-visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  /*
   * Extends the .visuallyhidden class to allow the element to be focusable
   * when navigated to via the keyboard: h5bp.com/p
   */
}
.is-visuallyhidden.is-focusable:active, .is-visuallyhidden.is-focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */
.is-invisible {
  visibility: hidden;
}

/*
 * Generic class to disable buttons and links
 */
.is-disabled {
  opacity: 0.5;
  pointer-events: none;
}

/*
 * Hide visually and from screen readers: h5bp.com/u
 */
.is-hidden {
  display: none !important;
  visibility: hidden;
}

/**
 * Used to show elements
 * will be set to inherit by default, but can be block inline or inline-block as well,
 * just use the modifiers
 */
.is-visible {
  display: inherit !important;
  visibility: visible;
}
.is-visible--block {
  display: block !important;
}
.is-visible--inline {
  display: inline !important;
}
.is-visible--inline-block {
  display: inline-block !important;
}

/* generic loading class */
.is-loading {
  pointer-events: none;
  opacity: 0.5;
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% {
    opacity: 0.2;
  }

  50% {
    opacity: 0.6;
  }

  100% {
    opacity: 0.2;
  }
}
