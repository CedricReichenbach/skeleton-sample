$pictos_small1x: sprite-map("pictos/small/*.png", $spacing: $icons-spacing, $layout: smart);
$pictos_small2x: sprite-map("pictos/small2x/*.png", $spacing: $icons2x-spacing, $layout: smart);
$pictos_large1x: $pictos_small2x;
$pictos_large2x: sprite-map("pictos/large2x/*.png", $spacing: $icons2x-spacing, $layout: smart);


/*
    How to use the mixin:

    Usually you wanna put the picto on an after element, where you can't use the classes.
    In these - hopefully rare - cases, you can go like this:

    .my-style {
        position: relative;
        &:after {
            @include picto-after(name-of-picto, "dark", "small");
        }
    }

    or (if you know what you do):

    .my-style {
        @extend %picto;
        @extend .picto-return;
    }

    This has not been tested. Please notify Sev (sk@hinderlingvolkart.com) if there's any problem.
 */

@function picto-sprite($size: 'small', $res: '1x') {
    @if $size == "large" {
        @if $res == "2x" {
            @return $pictos_large2x;
        }
        @else {
            @return $pictos_large1x;
        }
    }
    @else {
        @if $res == "2x" {
            @return $pictos_small2x;
        }
        @else {
            @return $pictos_small1x;
        }
    }
}

@function picto-width($name, $size: 'small') {
    @return if( $name == "small", 30px, 60px );
    // @return image-width("pictos/" + $size + "/dark-" + $name + ".png");
}
@function picto-height($name, $size: 'small') {
    @return if( $name == "small", 30px, 60px );
    // @return image-height("pictos/" + $size + "/dark-" + $name + ".png");
}

@mixin picto-sprite($size: 'small') {
    $pictos1x: picto-sprite($size, '1x');
    $pictos2x: picto-sprite($size, '2x');

    background-image: $pictos1x;
    background-repeat: no-repeat;

    @include retina {
        background-image: $pictos2x;
        background-size: ceil(image-width(sprite-path($pictos2x)) / 2) auto;
    }
}

@mixin picto($name, $color: "dark", $size: 'small') {
    $pictos1x: picto-sprite($size, '1x');
    $pictos2x: picto-sprite($size, '2x');
    $filename: $color + "-" + $name;

    background-image: $pictos1x;
    background-repeat: no-repeat;
    background-position: sprite-position($pictos1x, $filename);

    @include retina {
        background-image: $pictos2x;
        background-size: ceil(image-width(sprite-path($pictos2x)) / 2) auto;
        $pos: sprite-position($pictos2x, $filename);
        background-position: nth($pos, 1)/2 nth($pos, 2)/2;
    }
}

@mixin picto-pos($name, $color: "dark", $size: 'small') {
    $pictos1x: picto-sprite($size, '1x');
    $pictos2x: picto-sprite($size, '2x');
    $filename: $color + "-" + $name;
    background-position: sprite-position($pictos1x, $filename);
}

@mixin picto-size($name, $size: 'small') {
    width: picto-width($name, $size);
    height: picto-height($name, $size);
}

@mixin picto-box($name, $color: "dark", $size: 'small') {
    @include picto-size($name, $size);
    @include picto($name, $color, $size);
}

@mixin picto-after($name, $color: "dark", $size: 'small') {
    @include picto-box($name, $color, $size);
    content: '';
    display: block;
    position: absolute;
    top: 50%; left: 50%;
    margin: (floor(picto-height($name,$size) / 2) * -1) 0 0 (floor(picto-width($name,$size) / 2) * -1);
}
